<?php
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
include('db.php');

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ —Å–µ—Å—Å–∏–∏)
$username = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'; // –ü—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$user_id = 1; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π user_id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è
$query_assignments = "SELECT * FROM assignments ORDER BY deadline ASC";
$assignments_result = mysqli_query($conn, $query_assignments);

// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$query_user_assignments = "
    SELECT ua.assignment_id, ua.status 
    FROM user_assignments ua 
    WHERE ua.user_id = $user_id";
$user_assignments_result = mysqli_query($conn, $query_user_assignments);
$user_assignments = [];
while ($row = mysqli_fetch_assoc($user_assignments_result)) {
    $user_assignments[$row['assignment_id']] = $row['status'];
}

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
$sql_achievements = "SELECT * FROM achievements_dost";
$result_achievements = $conn->query($sql_achievements);

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π
$sql_goals = "SELECT * FROM goals_dost";
$result_goals = $conn->query($sql_goals);
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –∑–∞–¥–∞–Ω–∏—è</title>
    <style>
        /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            padding: 20px;
            margin-left: 270px; /* –®–∏—Ä–∏–Ω–∞ –º–µ–Ω—é */
            transition: margin-left 0.5s;
        }

        h1 {
            text-align: center;
            color: #4c3b6e;
        }

        .assignment-list, .achievement-list {
            background-color: #fff;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .assignment-list h2, .achievement-list h2 {
            color: #4c3b6e;
            margin-bottom: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f4f5fa;
            color: #4c3b6e;
        }

        .status {
            padding: 5px;
            border-radius: 5px;
            text-align: center;
        }

        .not_started {
            background-color: #ffeb3b;
        }

        .in_progress {
            background-color: #2196f3;
            color: #fff;
        }

        .completed {
            background-color: #4caf50;
            color: #fff;
        }

        .submit-btn {
            padding: 8px 15px;
            background-color: #4c3b6e;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .submit-btn:hover {
            background-color: #6f57a1;
        }

        .achievement, .goal {
            background-color: #fff;
            border: 1px solid #ddd;
            margin: 5px 0;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .achievement h3, .goal h3 {
            font-size: 18px;
            color: #4c3b6e;
            margin-bottom: 5px;
        }

        .achievement p, .goal p {
            color: #555;
            margin-top: 5px;
        }

        /* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */
        .sidebar {
            width: 250px;
            height: 100vh;
            background-color: #ffffff;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
            position: fixed;
            display: flex;
            flex-direction: column;
            transform: translateX(-250px);
            opacity: 0;
            transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s ease-in-out;
        }

        .sidebar.open {
            transform: translateX(0);
            opacity: 1;
        }

        .menu {
            list-style: none;
            padding: 0;
            margin: 0;
            flex-grow: 1;
        }

        .menu li {
            border-bottom: 1px solid #f4f5fa;
        }

        .menu li a {
            text-decoration: none;
            display: flex;
            align-items: center;
            padding: 15px 20px;
            color: #333;
            font-size: 16px;
            transition: all 0.3s;
        }

        .menu li a:hover {
            background-color: #f4f5fa;
            color: #4c3b6e;
        }

        .menu li.active a {
            background-color: #4c3b6e;
            color: white;
        }

        .open-btn {
            font-size: 28px;
            color: #fff;
            background-color: #4c3b6e;
            padding: 15px;
            border: none;
            cursor: pointer;
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1000;
        }

        .open-btn:hover {
            background-color: #6f57a1;
        }
    </style>
</head>
<body>

<!-- –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é -->
<div class="sidebar" id="sidebar">
    <div class="logo">NSA</div>
    <ul class="menu">
        <li class="active"><a href="#">üè† –ì–ª–∞–≤–Ω–∞—è</a></li>
        <li><a href="dost.php">üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</a></li>
        <li><a href="reiting.php">üìä –†–µ–π—Ç–∏–Ω–≥–∏</a></li>
        <li><a href="task.php">üìö –ó–∞–¥–∞–Ω–∏—è</a></li>
        <li><a href="game.php">üéÆ –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è</a></li>
        <li><a href="obmen.php">ü§ù –û–±–º–µ–Ω –≤–µ—â–∞–º–∏</a></li>
        <li><a href="uslug.php">üõ†Ô∏è –ü–æ–∏—Å–∫ —É—Å–ª—É–≥</a></li>
        <li><a href="dosug.php">üéâ –î–æ—Å—É–≥</a></li>
        <li><a href="sob.php">üí¨ –°–æ–æ–±—â–µ—Å—Ç–≤–æ</a></li>
        <li><a href="data.php">üóì –ö–∞–ª–µ–Ω–¥–∞—Ä—å</a></li>
        <li><a href="goals.php">üéØ –ú–æ–∏ —Ü–µ–ª–∏</a></li>
        <li><a href="profile.php">üë§ –ü—Ä–æ—Ñ–∏–ª—å</a></li>
        <li><a href="user_settings.php">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</a></li>
        <li><a href="logout2.php">–®—ã“ì—É</a></li>
    </ul>
    <div class="footer">
        &copy; 2024 StudyLife+
    </div>
</div>

<!-- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é -->
<button class="open-btn" onclick="toggleSidebar()">‚ò∞</button>

<!-- –°–µ–∫—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π -->
<div class="achievement-list">
    <h2>–ó–Ω–∞—á–∫–∏, —Ç—Ä–æ—Ñ–µ–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã</h2>
    <?php if ($result_achievements->num_rows > 0): ?>
        <?php while($row = $result_achievements->fetch_assoc()): ?>
            <div class="achievement">
                <h3><?php echo htmlspecialchars($row['title']); ?></h3>
                <p><?php echo htmlspecialchars($row['description']); ?></p>
                <p>–¢–∏–ø: <?php echo ucfirst($row['type']); ?></p>
                <?php if ($row['type'] == 'badge'): ?>
                    <div class="badge-progress">
                        –ü—Ä–æ–≥—Ä–µ—Å—Å: <?php echo $row['progress']; ?>%
                    </div>
                <?php endif; ?>
            </div>
        <?php endwhile; ?>
    <?php else: ?>
        <p>–ù–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.</p>
    <?php endif; ?>
</div>

<!-- –°–µ–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–∞–Ω–∏–π -->
<div class="assignment-list">
    <h2>–í—Å–µ –∑–∞–¥–∞–Ω–∏—è</h2>
    <table>
        <thead>
            <tr>
                <th>–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</th>
                <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
                <th>–ë–∞–ª–ª—ã</th>
                <th>–î–µ–¥–ª–∞–π–Ω</th>
                <th>–°—Ç–∞—Ç—É—Å</th>
                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
        </thead>
        <tbody>
            <?php while ($assignment = mysqli_fetch_assoc($assignments_result)) { 
                $status = isset($user_assignments[$assignment['id']]) ? $user_assignments[$assignment['id']] : 'not_started';
                ?>
                <tr>
                    <td><?php echo $assignment['title']; ?></td>
                    <td><?php echo $assignment['description']; ?></td>
                    <td><?php echo $assignment['points']; ?></td>
                    <td><?php echo date('d.m.Y H:i', strtotime($assignment['deadline'])); ?></td>
                    <td>
                        <span class="status <?php echo $status; ?>">
                            <?php 
                                echo ucfirst(str_replace('_', ' ', $status)); 
                            ?>
                        </span>
                    </td>
                    <td>
                        <?php if ($status == 'not_started') { ?>
                            <button class="submit-btn" onclick="updateStatus(<?php echo $assignment['id']; ?>, 'in_progress')">–ù–∞—á–∞—Ç—å</button>
                        <?php } elseif ($status == 'in_progress') { ?>
                            <button class="submit-btn" onclick="updateStatus(<?php echo $assignment['id']; ?>, 'completed')">–ó–∞–≤–µ—Ä—à–∏—Ç—å</button>
                        <?php } ?>
                    </td>
                </tr>
            <?php } ?>
        </tbody>
    </table>
</div>

<script>
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞–Ω–∏—è
function updateStatus(assignment_id, status) {
    fetch('update_status.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            assignment_id: assignment_id,
            status: status
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞');
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
function toggleSidebar() {
    const sidebar = document.getElementById("sidebar");
    sidebar.classList.toggle("open");
}
</script>

</body>
</html>

<?php
// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
mysqli_close($conn);
?>  
